{"version":3,"sources":["components/utils/confirmation-dialog.tsx","hooks/use-combined-state.ts","components/main-page/team-form.tsx","components/main-page/team-form.module.scss","components/utils/custom-table.tsx","components/utils/custom-table.module.scss","../node_modules/@material-ui/icons/CheckCircle.js","components/main-page/team-list.module.scss","components/main-page/teams-table.module.scss","components/utils/team-invite.module.scss","../node_modules/@material-ui/icons/FileCopy.js","../node_modules/@material-ui/icons/Visibility.js","../node_modules/@material-ui/icons/Add.js","components/utils/team-invite.tsx","components/main-page/teams-table.tsx","components/main-page/team-list.tsx"],"names":["ConfirmationDialog","title","message","acceptText","cancelText","Trigger","renderTrigger","action","onSuccess","onError","useState","open","setOpen","loading","setLoading","handleClose","close","onClose","maxWidth","fullWidth","disableEscapeKeyDown","disableBackdropClick","aria-labelledby","aria-describedby","id","onClick","color","variant","disabled","actionReturn","isPromise","then","data","catch","error","finally","autoFocus","inCase","size","useCombinedState","initialState","useReducer","prevState","nextState","Object","assign","TeamForm","afterSubmitAction","className","team","name","type","isAdmin","dispatch","useDispatch","history","useHistory","isPublic","updatedTeam","setUpdatedTeam","checked","setChecked","useForm","reValidateMode","mode","register","handleSubmit","errors","nameRef","validationRules","teamName","nameError","getValidationMessage","useSelector","state","teams","teamsAsArray","values","styles","form","onSubmit","formData","find","t","showAlert","content","createTeam","callApi","teamApi","getUrl","method","body","JSON","stringify","err","margin","input","inputRef","label","helperText","Boolean","defaultValue","required","last","control","onChange","undefined","labelPlacement","btns","btn","delete","deleteTeam","push","module","exports","StyledTableCell","withStyles","root","fontSize","TableCell","CustomTable","props","isEmpty","emptyTableMessage","rest","empty","table","children","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","value","default","React","_default","createElement","d","TeamInvite","invitePromise","inviteLink","inviteLinkErr","dialogIsOpen","copied","setState","useEffect","res","window","location","origin","token","handleCopy","navigator","clipboard","writeText","setTimeout","Dialog","DialogTitle","IconButton","TeamsTable","setInvitePromise","length","TableBody","map","TableRow","align","currentUserIsJoined","Button","classes","teamId","getInvitationLinkUrl","leaveTeam","clickedTeamId","joinPublicTeam","actionsMap","joined","getMyTeams","nonJoined","getPublicNonJoinedTeams","tabsMap","0","1","TeamList","addFormIsOpen","setAddFormIsOpen","selectedTeamsType","useReduxAction","selector","effectDeps","loadingSelectedTeams","user","closeAddForm","targetTeams","filter","container","header","startIcon","buttonTitles","tabContents","onTabSwitch","selectedIndex","changeSelectedTeamsType","initialSelectedIndex","stretchTabs"],"mappings":"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","file":"static/js/5.84bdce5b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport ShowFirstChild from './show-first-child';\nimport { isPromise } from '../../utils/utils';\n\ninterface TriggerProps {\n  open: () => void;\n  close: () => void;\n};\n\nexport interface ConfirmationDialogProps {\n  title: string;\n  message?: string;\n  acceptText?: string;\n  cancelText?: string;\n  action: <T>() => any | Promise<T>;\n  renderTrigger: React.FC<TriggerProps>;\n  onSuccess?: (data: any) => any;\n  onError?: (error: Error) => any;\n}\n\nconst ConfirmationDialog: React.FC<ConfirmationDialogProps> = ({\n  title, message, acceptText, cancelText, renderTrigger: Trigger, action, onSuccess, onError\n}) => {\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const handleAcceptance = () => {\n    const actionReturn = action();\n    if (!isPromise(actionReturn)) return handleClose();\n    setLoading(true);\n    actionReturn\n      .then((data: any) => {\n        onSuccess && onSuccess(data);\n      })\n      .catch((error: Error) => {\n        onError && onError(error);\n      })\n      .finally(() => { setLoading(false); handleClose(); });\n  };\n\n  return (\n    <>\n      <Trigger open={handleClickOpen} close={handleClose} />\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        maxWidth=\"sm\"\n        fullWidth\n        disableEscapeKeyDown={loading}\n        disableBackdropClick={loading}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {title}\n        </DialogTitle>\n        {message && (\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              {message}\n            </DialogContentText>\n          </DialogContent>\n        )}\n        <DialogActions>\n          <Button onClick={handleClose} color=\"secondary\" variant=\"contained\" disabled={loading}>\n            {cancelText ?? 'Cancel'}\n          </Button>\n          <Button onClick={handleAcceptance} color=\"primary\" variant=\"contained\" autoFocus disabled={loading}>\n            <ShowFirstChild inCase={loading}>\n              <CircularProgress size={20} />\n              <>{acceptText ?? 'Yes'}</>\n            </ShowFirstChild>\n            {loading}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default ConfirmationDialog;\n","import React, { useReducer } from \"react\";\n\nexport default function useCombinedState<T>(initialState: T): [T, React.Dispatch<T>] {\n\n  const [state, setState] = useReducer((prevState: T, nextState: T) => Object.assign({}, prevState, nextState), initialState);\n  \n  return [state, setState];\n}\n\n","import { Button, Checkbox, FormControlLabel, TextField } from '@material-ui/core'\nimport { useForm } from 'react-hook-form';\nimport styles from './team-form.module.scss';\nimport validationRules, { getValidationMessage } from '../../models/validation';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createTeam, deleteTeam, updateTeam } from '../../redux/actions/team';\nimport { RootState, TeamsState } from '../../models/state-types';\nimport { useEffect, useState } from 'react';\nimport useCombinedState from '../../hooks/use-combined-state';\nimport Team from '../../models/team';\nimport ShowFirstChild from '../utils/show-first-child';\nimport { showMessage } from '../../redux/actions/global';\nimport callApi from '../../api/call-api';\nimport teamApi from '../../api/team';\nimport { showAlert } from '../../utils/utils';\nimport ConfirmationDialog from '../utils/confirmation-dialog';\nimport { useHistory } from 'react-router';\n\ntype TeamFormProps = {\n  afterSubmitAction?: () => void\n  className?: string\n  type: 'create' | 'update'\n  team?: Team\n  isAdmin?: boolean\n};\n\nconst TeamForm = ({\n  afterSubmitAction,\n  className,\n  team = { id: '', name: '' },\n  type,\n  isAdmin = false\n}: TeamFormProps) => {\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const [updatedTeam, setUpdatedTeam] = useState({ name: team.name, isPublic: team.isPublic });\n  const [checked, setChecked] = useState(updatedTeam.isPublic);\n  const { register, handleSubmit, errors } = useForm({ reValidateMode: 'onBlur', mode: 'onBlur' });\n  const nameRef = register(validationRules.teamName);\n  const nameError = getValidationMessage(errors, 'name', validationRules.teamName);\n  const { data: teams = {} } = useSelector<RootState, TeamsState>(state => state.teams);\n\n  const teamsAsArray = Object.values(teams);\n\n  const onSubmit = (formData: { name: string, isPublic: boolean }) => {\n    const { name, isPublic } = formData;\n\n    if (type === 'create') {\n      if (teamsAsArray.find(t => t.name === name)) {\n        showAlert(dispatch, { type: 'error', content: 'Team name already exists' });\n        return;\n      }\n\n      dispatch(createTeam({ name, isPublic }))\n      if (afterSubmitAction) afterSubmitAction();\n      return\n    }\n\n    if (updatedTeam.name === name && updatedTeam.isPublic === isPublic) return;\n\n    callApi(teamApi.getUrl(team.id), { method: 'PATCH', body: JSON.stringify({ name, isPublic }) })\n      .then((team) => {\n        setUpdatedTeam(team);\n        showAlert(dispatch, { content: 'Saved Changes', type: 'success' })\n      })\n      .catch(err => showAlert(dispatch, { content: err.message, type: 'error' }));\n    if (afterSubmitAction) afterSubmitAction();\n  };\n\n  const handleDeleteTeam = () => {\n    dispatch(deleteTeam(team.id));\n    history.push('/');\n  };\n\n  return (\n    <form className={styles.form + ' ' + className} onSubmit={handleSubmit(onSubmit)}>\n      <TextField\n        margin=\"normal\"\n        className={styles.input}\n        inputRef={nameRef}\n        id=\"name\"\n        name=\"name\"\n        label=\"Name\"\n        type=\"text\"\n        helperText={nameError}\n        error={Boolean(nameError)}\n        defaultValue={team.name}\n        disabled={!isAdmin}\n        required\n      />\n      <FormControlLabel\n        className={styles.last}\n        label='Public'\n        control={\n          <Checkbox\n            inputRef={register}\n            name='isPublic'\n            color='primary'\n            checked={checked}\n            onChange={isAdmin ? () => setChecked(!checked) : undefined}\n          />\n        }\n        labelPlacement='end'\n      />\n      <ShowFirstChild inCase={isAdmin}>\n        <div className={styles.btns}>\n          <Button\n            className={styles.btn}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            Save\n          </Button>\n          <ShowFirstChild inCase={type === 'update'}>\n            <ConfirmationDialog\n              renderTrigger={({ open }) => (\n                <Button\n                  className={styles.delete}\n                  color=\"secondary\"\n                  onClick={open}\n                  variant='contained'\n                >\n                  Delete\n                </Button>\n              )}\n              action={handleDeleteTeam}\n              title={`Are you sure you want to delete team ${updatedTeam.name}?`}\n              acceptText=\"Yes\"\n              cancelText=\"Cancel\"\n            />\n          </ShowFirstChild>\n        </div>\n      </ShowFirstChild>\n    </form>\n  )\n}\n\nexport default TeamForm\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fs-lg\":\"team-form_fs-lg__KXAfg\",\"form\":\"team-form_form__woAQs\",\"msg\":\"team-form_msg__3hKwO\",\"input\":\"team-form_input__1OECB\",\"last\":\"team-form_last__3kpfG\",\"btn\":\"team-form_btn__EPysp\",\"btns\":\"team-form_btns__2lhyx\",\"delete\":\"team-form_delete__1ZJSP\"};","import Table, { TableTypeMap } from \"@material-ui/core/Table\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { DefaultComponentProps } from \"@material-ui/core/OverridableComponent\";\nimport styles from './custom-table.module.scss';\n\nexport interface CustomTableProps extends DefaultComponentProps<TableTypeMap<{}, \"table\">> {\n  isEmpty: boolean\n  emptyTableMessage?: string\n}\n\nexport const StyledTableCell = withStyles({\n  root: {\n    fontSize: '1.2rem'\n  }\n})(TableCell);\n\nconst CustomTable = (props: CustomTableProps) => {\n  const { isEmpty, emptyTableMessage = 'No Data', ...rest } = props;\n  return isEmpty ?\n    (\n      <div className={styles.empty}>\n        <p>{emptyTableMessage}</p>\n      </div>\n    )\n    :\n    (\n      <Table className={styles.table} {...rest}>\n        {props.children}\n      </Table >\n    );\n};\n\nexport default CustomTable\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fs-lg\":\"custom-table_fs-lg__3qbwE\",\"table\":\"custom-table_table__26eiR\",\"empty\":\"custom-table_empty__3ZLMQ\"};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\n\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fs-lg\":\"team-list_fs-lg__2sLpv\",\"container\":\"team-list_container__2ieiB\",\"title\":\"team-list_title__2_eFp\",\"teams\":\"team-list_teams__2tC6n\",\"header\":\"team-list_header__nl4J7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fs-lg\":\"teams-table_fs-lg__KN13x\",\"table\":\"teams-table_table__GXMgk\",\"invite-link\":\"teams-table_invite-link__3IOOg\",\"invite-title\":\"teams-table_invite-title__23X71\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fs-lg\":\"team-invite_fs-lg__2ItIp\",\"invite-link\":\"team-invite_invite-link__2kqd_\",\"invite-title\":\"team-invite_invite-title__Lkv1g\"};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z\"\n}), 'FileCopy');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","import { Button, Dialog, DialogTitle, IconButton, withStyles } from '@material-ui/core';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport useCombinedState from '../../hooks/use-combined-state';\nimport CheckIcon from '@material-ui/icons/CheckCircle';\nimport styles from './team-invite.module.scss';\nimport { useEffect } from 'react';\n\nconst TeamInvite = ({ invitePromise }: { invitePromise: Promise<any> | null }) => {\n\n  const [{ inviteLink, inviteLinkErr, dialogIsOpen, copied }, setState] = useCombinedState<any>({\n    inviteLink: '',\n    inviteLinkErr: '',\n    dialogIsOpen: false,\n    copied: false\n  });\n\n  useEffect(() => {\n    if (!invitePromise) return;\n    invitePromise.then(res => setState({\n      inviteLink: `${window.location.origin}/team/join/${res.token}`,\n      inviteLinkErr: '',\n      dialogIsOpen: true,\n      copied: false\n    }))\n      .catch(err => setState({ inviteLinkErr: err.message, inviteLink: '', dialogIsOpen: true, copied: false }));\n  }, [invitePromise]);\n\n  const handleDialogClose = () => {\n    setState({ dialogIsOpen: false });\n  }\n\n  const handleCopy = inviteLink ? () => {\n    navigator.clipboard.writeText(inviteLink);\n    setState({ copied: true });\n    setTimeout(() => setState({ copied: false }), 2000);\n  } : undefined;\n\n  return (\n    <Dialog open={dialogIsOpen} onClose={handleDialogClose}>\n      <DialogTitle>\n        <div className={styles['invite-title']}>\n          <strong>Copy Invitation Link</strong>\n          <IconButton\n            onClick={handleCopy}\n            title=\"Copy\"\n          >\n            {copied ? <CheckIcon color=\"primary\" /> : <FileCopyIcon />}\n          </IconButton>\n        </div>\n      </DialogTitle>\n      <div className={styles['invite-link']}>{inviteLink || inviteLinkErr}</div>\n    </Dialog>\n  )\n}\n\nexport default TeamInvite\n","import Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Button, Dialog, DialogTitle, IconButton, withStyles } from '@material-ui/core';\nimport Team from '../../models/team';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport callApi from '../../api/call-api';\nimport teamApi from '../../api/team';\nimport { useHistory } from 'react-router';\nimport useCombinedState from '../../hooks/use-combined-state';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport styles from './teams-table.module.scss';\nimport { useState } from 'react';\nimport CheckIcon from '@material-ui/icons/CheckCircle';\nimport { useDispatch } from 'react-redux';\nimport { joinPublicTeam, leaveTeam } from '../../redux/actions/team';\nimport CustomTable, { StyledTableCell } from '../utils/custom-table';\nimport TeamInvite from '../utils/team-invite';\nimport ConfirmationDialog from '../utils/confirmation-dialog';\nimport ShowFirstChild from '../utils/show-first-child';\n\nexport interface TeamsTableProps {\n  teams: Team[];\n}\n\nconst emptyTableMessage = 'No Teams Found';\nconst TeamsTable = ({ teams }: TeamsTableProps) => {\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const [invitePromise, setInvitePromise] = useState<Promise<any> | null>(null);\n\n  const getInvitationLink = (teamId: string) => {\n    setInvitePromise(callApi(teamApi.getInvitationLinkUrl(teamId), { method: 'POST' }));\n  };\n\n  const handleJoinButton = (clickedTeamId: string) => {\n    dispatch(joinPublicTeam(clickedTeamId));\n  };\n\n  return (\n    <CustomTable className={styles.table} isEmpty={teams.length === 0} emptyTableMessage={emptyTableMessage}>\n      <TableBody>\n        {teams.map(t => (\n          <TableRow key={t.name}>\n            <StyledTableCell key=\"name\" align=\"left\">{t.name}</StyledTableCell>\n            <StyledTableCell key=\"actions\" align=\"center\">\n              <ShowFirstChild inCase={Boolean(t.currentUserIsJoined)}>\n                <>\n                  <Button classes={{ root: 'mr-3' }} variant=\"contained\" color=\"primary\" onClick={() => history.push(`voting/${t.id}`)}>\n                    Start Voting\n                  </Button>\n                  <Button\n                    classes={{ root: 'mr-3' }}\n                    variant=\"outlined\" color=\"primary\"\n                    onClick={() => getInvitationLink(t.id)}>\n                    Invite\n                  </Button>\n                  <ConfirmationDialog\n                    renderTrigger={({ open }) => (\n                      <Button\n                        classes={{ root: 'mr-3' }} variant=\"contained\" color=\"secondary\"\n                        onClick={open}\n                      >\n                        Leave\n                      </Button>\n                    )}\n                    action={() => dispatch(leaveTeam(t.id))}\n                    title={`Are you sure you want to leave team ${t.name}?`}\n                    acceptText=\"Yes\"\n                    cancelText=\"Cancel\"\n                  />\n                </>\n                <>\n                  <Button\n                    classes={{ root: 'mr-3' }}\n                    variant=\"contained\" color=\"primary\"\n                    onClick={() => handleJoinButton(t.id)}>\n                    Join\n                  </Button>\n                </>\n              </ShowFirstChild>\n              <IconButton onClick={() => history.push(`team/${t.id}`)}>\n                <VisibilityIcon />\n              </IconButton>\n            </StyledTableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n      <TeamInvite invitePromise={invitePromise} />\n    </CustomTable>\n  );\n};\n\nexport default TeamsTable;\n","import useReduxAction from \"../../hooks/use-redux-action\";\nimport { changeSelectedTeamsType, getMyTeams, getPublicNonJoinedTeams } from \"../../redux/actions/team\";\nimport { RootState, TeamsState } from \"../../models/state-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { User } from \"../../models/user\";\nimport styles from './team-list.module.scss';\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { useState } from \"react\";\nimport TeamForm from \"./team-form\";\nimport TeamsTable from \"./teams-table\";\nimport Loading from \"../utils/loading\";\nimport TabPanel from '../utils/tab-panel';\n\nconst actionsMap = {\n  joined: getMyTeams,\n  nonJoined: getPublicNonJoinedTeams\n};\n\nconst tabsMap: { [key: string]: string | number } = {\n  0: 'joined',\n  1: 'nonJoined',\n  'joined': 0,\n  'nonJoined': 1\n};\n\nconst TeamList = () => {\n\n  const dispatch = useDispatch();\n\n  const [addFormIsOpen, setAddFormIsOpen] = useState(false);\n\n  const handleTabSwitch = (selectedIndex: number = 0) => {\n    if (selectedTeamsType === tabsMap[selectedIndex]) return;\n    dispatch(changeSelectedTeamsType(selectedIndex === 0 ? 'joined' : 'nonJoined'));\n  };\n\n  const { selectedTeamsType = 'joined' } = useSelector<RootState, TeamsState>(state => state.teams);\n  const { data, error, loading, loadingSelectedTeams = true } = useReduxAction<TeamsState>({\n    action: actionsMap[selectedTeamsType],\n    selector: state => state.teams,\n    effectDeps: [selectedTeamsType],\n  });\n\n  const user = useSelector<RootState, User>(state => state.user.data as User);\n\n  if (loading || !data || !user) return <Loading />;\n\n  const openAddForm = () => setAddFormIsOpen(true);\n  const closeAddForm = () => setAddFormIsOpen(false);\n\n  const targetTeams = Object.values(data).filter(t => selectedTeamsType === 'joined' ? t.currentUserIsJoined : !t.currentUserIsJoined)\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.header}>\n        <h3 className={styles.title}>Teams</h3>\n        <Button\n          className={styles['add-btn']}\n          color=\"primary\" variant=\"contained\"\n          startIcon={<AddIcon />}\n          onClick={openAddForm}\n        >\n          New Team\n        </Button>\n      </div>\n      <TabPanel\n        buttonTitles={['My Teams', 'All Public Teams']}\n        tabContents={[<TeamsTable teams={targetTeams} />, <TeamsTable teams={targetTeams} />]}\n        onTabSwitch={handleTabSwitch}\n        loading={loadingSelectedTeams}\n        initialSelectedIndex={+tabsMap[selectedTeamsType] || 0}\n        stretchTabs={false}\n      />\n      <Dialog open={addFormIsOpen} onClose={closeAddForm}>\n        <DialogTitle><strong>Add New Team</strong></DialogTitle>\n        <TeamForm afterSubmitAction={closeAddForm} type='create' isAdmin={true} />\n      </Dialog>\n    </div>\n  );\n};\n\nexport default TeamList;"],"sourceRoot":""}
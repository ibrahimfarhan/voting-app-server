{"version":3,"sources":["components/utils/confirmation-dialog.tsx","hooks/use-combined-state.ts","components/main-page/team-form.tsx","components/main-page/team-form.module.scss","components/utils/custom-table.tsx","components/utils/custom-table.module.scss","components/team-page/members-table.module.scss","components/team-page/team-details.module.scss","../node_modules/@material-ui/core/esm/TableHead/TableHead.js","components/team-page/members-table.tsx","components/team-page/team-details.tsx"],"names":["ConfirmationDialog","title","message","acceptText","cancelText","Trigger","renderTrigger","action","onSuccess","onError","useState","open","setOpen","loading","setLoading","handleClose","close","onClose","maxWidth","fullWidth","disableEscapeKeyDown","disableBackdropClick","aria-labelledby","aria-describedby","id","onClick","color","variant","disabled","actionReturn","isPromise","then","data","catch","error","finally","autoFocus","inCase","size","useCombinedState","initialState","useReducer","prevState","nextState","Object","assign","TeamForm","afterSubmitAction","className","team","name","type","isAdmin","dispatch","useDispatch","history","useHistory","isPublic","updatedTeam","setUpdatedTeam","checked","setChecked","useForm","reValidateMode","mode","register","handleSubmit","errors","nameRef","validationRules","teamName","nameError","getValidationMessage","useSelector","state","teams","teamsAsArray","values","styles","form","onSubmit","formData","find","t","showAlert","content","createTeam","callApi","teamApi","getUrl","method","body","JSON","stringify","err","margin","input","inputRef","label","helperText","Boolean","defaultValue","required","last","control","onChange","undefined","labelPlacement","btns","btn","delete","deleteTeam","push","module","exports","StyledTableCell","withStyles","root","fontSize","TableCell","CustomTable","props","isEmpty","emptyTableMessage","rest","empty","table","children","tablelvl2","defaultComponent","TableHead","React","ref","classes","_props$component","component","Component","other","_objectWithoutProperties","Tablelvl2Context","Provider","value","_extends","clsx","role","display","MembersTable","members","allMembers","adminIds","teamId","currentUser","variableAdminIds","setAdminIds","currentUserIndex","findIndex","m","relocateElementToStart","wrapper","length","TableRow","align","TableBody","map","username","email","Button","userId","wasAdmin","toggleRole","newAdminIds","handleToggleRole","removeMember","you","TeamDetails","useParams","setTeamState","useEffect","res","teamApiError","user","loadingUser","admins","arrayToObj","membersForTable","concat"],"mappings":"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","file":"static/js/6.cf236ea1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport ShowFirstChild from './show-first-child';\nimport { isPromise } from '../../utils/utils';\n\ninterface TriggerProps {\n  open: () => void;\n  close: () => void;\n};\n\nexport interface ConfirmationDialogProps {\n  title: string;\n  message?: string;\n  acceptText?: string;\n  cancelText?: string;\n  action: <T>() => any | Promise<T>;\n  renderTrigger: React.FC<TriggerProps>;\n  onSuccess?: (data: any) => any;\n  onError?: (error: Error) => any;\n}\n\nconst ConfirmationDialog: React.FC<ConfirmationDialogProps> = ({\n  title, message, acceptText, cancelText, renderTrigger: Trigger, action, onSuccess, onError\n}) => {\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const handleAcceptance = () => {\n    const actionReturn = action();\n    if (!isPromise(actionReturn)) return handleClose();\n    setLoading(true);\n    actionReturn\n      .then((data: any) => {\n        onSuccess && onSuccess(data);\n      })\n      .catch((error: Error) => {\n        onError && onError(error);\n      })\n      .finally(() => { setLoading(false); handleClose(); });\n  };\n\n  return (\n    <>\n      <Trigger open={handleClickOpen} close={handleClose} />\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        maxWidth=\"sm\"\n        fullWidth\n        disableEscapeKeyDown={loading}\n        disableBackdropClick={loading}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {title}\n        </DialogTitle>\n        {message && (\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              {message}\n            </DialogContentText>\n          </DialogContent>\n        )}\n        <DialogActions>\n          <Button onClick={handleClose} color=\"secondary\" variant=\"contained\" disabled={loading}>\n            {cancelText ?? 'Cancel'}\n          </Button>\n          <Button onClick={handleAcceptance} color=\"primary\" variant=\"contained\" autoFocus disabled={loading}>\n            <ShowFirstChild inCase={loading}>\n              <CircularProgress size={20} />\n              <>{acceptText ?? 'Yes'}</>\n            </ShowFirstChild>\n            {loading}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default ConfirmationDialog;\n","import React, { useReducer } from \"react\";\n\nexport default function useCombinedState<T>(initialState: T): [T, React.Dispatch<T>] {\n\n  const [state, setState] = useReducer((prevState: T, nextState: T) => Object.assign({}, prevState, nextState), initialState);\n  \n  return [state, setState];\n}\n\n","import { Button, Checkbox, FormControlLabel, TextField } from '@material-ui/core'\nimport { useForm } from 'react-hook-form';\nimport styles from './team-form.module.scss';\nimport validationRules, { getValidationMessage } from '../../models/validation';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createTeam, deleteTeam, updateTeam } from '../../redux/actions/team';\nimport { RootState, TeamsState } from '../../models/state-types';\nimport { useEffect, useState } from 'react';\nimport useCombinedState from '../../hooks/use-combined-state';\nimport Team from '../../models/team';\nimport ShowFirstChild from '../utils/show-first-child';\nimport { showMessage } from '../../redux/actions/global';\nimport callApi from '../../api/call-api';\nimport teamApi from '../../api/team';\nimport { showAlert } from '../../utils/utils';\nimport ConfirmationDialog from '../utils/confirmation-dialog';\nimport { useHistory } from 'react-router';\n\ntype TeamFormProps = {\n  afterSubmitAction?: () => void\n  className?: string\n  type: 'create' | 'update'\n  team?: Team\n  isAdmin?: boolean\n};\n\nconst TeamForm = ({\n  afterSubmitAction,\n  className,\n  team = { id: '', name: '' },\n  type,\n  isAdmin = false\n}: TeamFormProps) => {\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const [updatedTeam, setUpdatedTeam] = useState({ name: team.name, isPublic: team.isPublic });\n  const [checked, setChecked] = useState(updatedTeam.isPublic);\n  const { register, handleSubmit, errors } = useForm({ reValidateMode: 'onBlur', mode: 'onBlur' });\n  const nameRef = register(validationRules.teamName);\n  const nameError = getValidationMessage(errors, 'name', validationRules.teamName);\n  const { data: teams = {} } = useSelector<RootState, TeamsState>(state => state.teams);\n\n  const teamsAsArray = Object.values(teams);\n\n  const onSubmit = (formData: { name: string, isPublic: boolean }) => {\n    const { name, isPublic } = formData;\n\n    if (type === 'create') {\n      if (teamsAsArray.find(t => t.name === name)) {\n        showAlert(dispatch, { type: 'error', content: 'Team name already exists' });\n        return;\n      }\n\n      dispatch(createTeam({ name, isPublic }))\n      if (afterSubmitAction) afterSubmitAction();\n      return\n    }\n\n    if (updatedTeam.name === name && updatedTeam.isPublic === isPublic) return;\n\n    callApi(teamApi.getUrl(team.id), { method: 'PATCH', body: JSON.stringify({ name, isPublic }) })\n      .then((team) => {\n        setUpdatedTeam(team);\n        showAlert(dispatch, { content: 'Saved Changes', type: 'success' })\n      })\n      .catch(err => showAlert(dispatch, { content: err.message, type: 'error' }));\n    if (afterSubmitAction) afterSubmitAction();\n  };\n\n  const handleDeleteTeam = () => {\n    dispatch(deleteTeam(team.id));\n    history.push('/');\n  };\n\n  return (\n    <form className={styles.form + ' ' + className} onSubmit={handleSubmit(onSubmit)}>\n      <TextField\n        margin=\"normal\"\n        className={styles.input}\n        inputRef={nameRef}\n        id=\"name\"\n        name=\"name\"\n        label=\"Name\"\n        type=\"text\"\n        helperText={nameError}\n        error={Boolean(nameError)}\n        defaultValue={team.name}\n        disabled={!isAdmin}\n        required\n      />\n      <FormControlLabel\n        className={styles.last}\n        label='Public'\n        control={\n          <Checkbox\n            inputRef={register}\n            name='isPublic'\n            color='primary'\n            checked={checked}\n            onChange={isAdmin ? () => setChecked(!checked) : undefined}\n          />\n        }\n        labelPlacement='end'\n      />\n      <ShowFirstChild inCase={isAdmin}>\n        <div className={styles.btns}>\n          <Button\n            className={styles.btn}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            Save\n          </Button>\n          <ShowFirstChild inCase={type === 'update'}>\n            <ConfirmationDialog\n              renderTrigger={({ open }) => (\n                <Button\n                  className={styles.delete}\n                  color=\"secondary\"\n                  onClick={open}\n                  variant='contained'\n                >\n                  Delete\n                </Button>\n              )}\n              action={handleDeleteTeam}\n              title={`Are you sure you want to delete team ${updatedTeam.name}?`}\n              acceptText=\"Yes\"\n              cancelText=\"Cancel\"\n            />\n          </ShowFirstChild>\n        </div>\n      </ShowFirstChild>\n    </form>\n  )\n}\n\nexport default TeamForm\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fs-lg\":\"team-form_fs-lg__KXAfg\",\"form\":\"team-form_form__woAQs\",\"msg\":\"team-form_msg__3hKwO\",\"input\":\"team-form_input__1OECB\",\"last\":\"team-form_last__3kpfG\",\"btn\":\"team-form_btn__EPysp\",\"btns\":\"team-form_btns__2lhyx\",\"delete\":\"team-form_delete__1ZJSP\"};","import Table, { TableTypeMap } from \"@material-ui/core/Table\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { DefaultComponentProps } from \"@material-ui/core/OverridableComponent\";\nimport styles from './custom-table.module.scss';\n\nexport interface CustomTableProps extends DefaultComponentProps<TableTypeMap<{}, \"table\">> {\n  isEmpty: boolean\n  emptyTableMessage?: string\n}\n\nexport const StyledTableCell = withStyles({\n  root: {\n    fontSize: '1.2rem'\n  }\n})(TableCell);\n\nconst CustomTable = (props: CustomTableProps) => {\n  const { isEmpty, emptyTableMessage = 'No Data', ...rest } = props;\n  return isEmpty ?\n    (\n      <div className={styles.empty}>\n        <p>{emptyTableMessage}</p>\n      </div>\n    )\n    :\n    (\n      <Table className={styles.table} {...rest}>\n        {props.children}\n      </Table >\n    );\n};\n\nexport default CustomTable\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fs-lg\":\"custom-table_fs-lg__3qbwE\",\"table\":\"custom-table_table__26eiR\",\"empty\":\"custom-table_empty__3ZLMQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fs-lg\":\"members-table_fs-lg__2KVUd\",\"you\":\"members-table_you__3bHDK\",\"wrapper\":\"members-table_wrapper__1nA4o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fs-lg\":\"team-details_fs-lg__3oFHE\",\"team\":\"team-details_team__3TIIc\",\"input\":\"team-details_input__2fQ9V\",\"title\":\"team-details_title__1i8bL\",\"form-wrapper\":\"team-details_form-wrapper__1aBgq\",\"team-form\":\"team-details_team-form__3FW--\",\"name-label\":\"team-details_name-label__RcBwG\",\"public\":\"team-details_public__XSOzF\",\"delete\":\"team-details_delete__1mHrV\",\"delete-icon\":\"team-details_delete-icon__1ClJ8\"};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-header-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'head'\n};\nvar defaultComponent = 'thead';\nvar TableHead = /*#__PURE__*/React.forwardRef(function TableHead(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableHead'\n})(TableHead);","import TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { User } from '../../models/user';\nimport { Button } from '@material-ui/core';\nimport ShowFirstChild from '../utils/show-first-child';\nimport styles from './members-table.module.scss';\nimport CustomTable, { StyledTableCell } from '../utils/custom-table';\nimport Team from '../../models/team';\nimport callApi from '../../api/call-api';\nimport teamApi from '../../api/team';\nimport { useDispatch } from 'react-redux';\nimport { removeMember } from '../../redux/actions/team';\nimport ConfirmationDialog from '../utils/confirmation-dialog';\nimport { relocateElementToStart, showAlert } from '../../utils/utils';\nimport { useState } from 'react';\nimport Popup from '../utils/popup';\n\nexport interface MembersTableProps {\n  allMembers: User[]\n  isAdmin?: boolean\n  adminIds: { [key: string]: boolean }\n  teamId: string\n  currentUser: User\n}\n\nconst emptyTableMessage = 'There are no members in this team.'\nconst MembersTable = ({ allMembers: members, isAdmin, adminIds, teamId, currentUser }: MembersTableProps) => {\n\n  const [variableAdminIds, setAdminIds] = useState(adminIds);\n  const currentUserIndex = members.findIndex(m => m.id === currentUser.id);\n  relocateElementToStart(members, currentUserIndex);\n  const dispatch = useDispatch();\n  const handleToggleRole = (userId: string) => {\n    const wasAdmin = variableAdminIds[userId];\n    callApi(teamApi.toggleRole, {\n      method: 'PATCH',\n      body: JSON.stringify({ userId, teamId })\n    })\n      .then(() => {\n        const newAdminIds = { ...variableAdminIds };\n        if (wasAdmin) delete newAdminIds[userId];\n        else newAdminIds[userId] = true;\n        setAdminIds(newAdminIds);\n      })\n      .catch(() => {\n        showAlert(dispatch, { type: 'error', content: 'Error while changing user role' });\n      })\n  };\n\n  const handleRemoveMember = (userId: string) => {\n    dispatch(removeMember({ userId, teamId, wasAdmin: variableAdminIds[userId] }))\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <CustomTable isEmpty={members.length === 0} emptyTableMessage={emptyTableMessage}>\n        <TableHead>\n          <TableRow>\n            <StyledTableCell key=\"username\" align=\"left\"><strong>Username</strong></StyledTableCell>\n            <StyledTableCell key=\"email\" align=\"left\"><strong>Email</strong></StyledTableCell>\n            <StyledTableCell key=\"role\" align=\"left\"><strong>Role</strong></StyledTableCell>\n            <ShowFirstChild inCase={Boolean(isAdmin)}>\n              <StyledTableCell key=\"actions\" align=\"left\"><strong>Actions</strong></StyledTableCell>\n            </ShowFirstChild>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {members.map(m => (\n            <TableRow key={m.username || m.name}>\n              <StyledTableCell key=\"username\">{m.username || m.name}</StyledTableCell>\n              <StyledTableCell key=\"email\" align=\"left\">{m.email}</StyledTableCell>\n              <StyledTableCell key=\"role\" align=\"left\">{variableAdminIds[m.id] ? 'Admin' : 'Member'}</StyledTableCell>\n              <ShowFirstChild inCase={Boolean(isAdmin)}>\n                <StyledTableCell key=\"actions\" align=\"left\">\n                  <ShowFirstChild inCase={m.id !== currentUser.id}>\n                    <>\n                      <Button\n                        classes={{ root: 'mr-3' }} variant=\"contained\" color=\"primary\"\n                        onClick={() => handleToggleRole(m.id)}\n                      >\n                        Toggle Role</Button>\n                      <ConfirmationDialog\n                        renderTrigger={({ open }) => (\n                          <Button\n                            classes={{ root: 'mr-3' }} variant=\"contained\" color=\"secondary\"\n                            onClick={open}\n                          >\n                            Remove</Button>\n                        )}\n                        action={() => handleRemoveMember(m.id)}\n                        title={`Are you sure you want to remove ${m.username}?`}\n                        acceptText=\"Yes\"\n                        cancelText=\"Cancel\"\n                      />\n                    </>\n                    <p className={styles.you}>YOU</p>\n                  </ShowFirstChild>\n                </StyledTableCell>\n              </ShowFirstChild>\n            </TableRow>\n          ))}\n        </TableBody>\n      </CustomTable>\n    </div>\n  );\n};\n\nexport default MembersTable;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport useReduxAction from \"../../hooks/use-redux-action\";\nimport { RootState, TeamsState, UserState } from \"../../models/state-types\";\nimport { deleteTeam, getTeam, updateTeam } from \"../../redux/actions/team\";\nimport EditableOnClick from \"../utils/editable-on-click\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MembersTable from \"./members-table\";\nimport validationRules, { getValidationMessage } from \"../../models/validation\";\nimport { FormEvent, useEffect, useMemo, useState } from \"react\";\nimport Popup from \"../utils/popup\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ShowFirstChild from \"../utils/show-first-child\";\nimport Loading from \"../utils/loading\";\nimport styles from \"./team-details.module.scss\";\nimport ConfirmationDialog from '../utils/confirmation-dialog';\nimport callApi from \"../../api/call-api\";\nimport teamApi from \"../../api/team\";\nimport useCombinedState from \"../../hooks/use-combined-state\";\nimport Team from \"../../models/team\";\nimport { Button, Checkbox, FormControlLabel, FormGroup } from \"@material-ui/core\";\nimport { arrayToObj } from \"../../utils/utils\";\nimport { useForm } from \"react-hook-form\";\nimport TeamForm from \"../main-page/team-form\";\n\ninterface TeamState {\n  team?: Team\n  loading?: boolean\n  teamApiError?: string\n}\n\nconst TeamDetails = () => {\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { teamId } = useParams<{ [key: string]: string; }>();\n  const [{ team, loading = true }, setTeamState] = useCombinedState<TeamState>({});\n  useEffect(() => {\n    callApi(teamApi.getUrl(teamId))\n      .then((res) => {\n        setTeamState({ loading: false, team: res });\n      })\n      .catch(() => {\n        setTeamState({ loading: false, teamApiError: 'Error while fetching team' });\n      });\n  }, [teamId]);\n\n  const { data: currentUser, loading: loadingUser } = useSelector<RootState, UserState>(state => state.user);\n\n  if (loading || loadingUser || !currentUser) return <Loading />;\n\n  if (!team) {\n    history.push('/');\n    return null;\n  }\n\n  const { admins = [], members = [] } = team;\n  const adminIds = arrayToObj(admins, 'id');\n  const isAdmin = adminIds[currentUser?.id || ''];\n  const membersForTable = admins.concat(members);\n\n  return (\n    <div className={styles.team}>\n      <h3 className={styles.title}>General</h3>\n      <div className={styles['form-wrapper']}>\n        <TeamForm className={styles['team-form']} type='update' team={team} isAdmin={isAdmin} />\n      </div>\n      <h3 className={styles.title}>Members</h3>\n      <MembersTable\n        teamId={team.id}\n        allMembers={membersForTable || []}\n        adminIds={adminIds}\n        isAdmin={isAdmin}\n        currentUser={currentUser}\n      />\n    </div >\n  );\n};\n\nexport default TeamDetails;"],"sourceRoot":""}
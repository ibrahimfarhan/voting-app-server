{"version":3,"sources":["hooks/use-redux-action.ts","components/utils/tab-panel.tsx","components/auth/auth.module.scss","components/utils/loading.module.scss","components/utils/global-alert.module.scss","components/root/root.module.scss","models/validation.ts","redux/actions/user.ts","hooks/use-dispatch-and-selector.ts","components/auth/login.tsx","components/auth/register.tsx","components/auth/auth.tsx","components/auth/private-route.tsx","assets/images/favicon.png","components/layout/mui-header.tsx","components/utils/global-alert.tsx","components/layout/styles.ts","components/layout/footer.tsx","components/root/root.tsx","reportWebVitals.ts","redux/reducers/user.ts","redux/reducers/team.ts","redux/reducers/global.ts","redux/reducers/root.ts","redux/store/store.ts","index.tsx","redux/helpers/api.ts","components/layout/mui-header.module.scss","components/auth/auth-form.module.scss","redux/actions/team.ts","api/team.ts","redux/actions/global.ts","api/user.ts","components/utils/tab-panel.module.scss","components/layout/footer.module.scss","components/utils/loading.tsx","api/urls.ts","utils/utils.ts","components/utils/show-first-child.tsx","api/call-api.ts"],"names":["useReduxAction","action","selector","effectDeps","actionParams","useCache","cachedValueSelector","state","precedingAction","precedingActionParams","dispatch","useDispatch","useSelector","useEffect","TabPanel","props","buttonTitles","onTabSwitch","loading","initialSelectedIndex","stretchTabs","useState","visibleTabIndex","setVisibleTabIndex","tabContents","useMemo","reduce","agg","c","i","handleTabBtnClick","e","selectedIndex","currentTarget","id","className","styles","container","map","t","classes","root","color","toString","onClick","variant","module","exports","invalidPasswordMsg","getValidationMessage","errors","fieldName","fieldValidationRules","patternMessage","Object","keys","length","type","minLength","maxLength","validationRules","usernameOrEmail","required","password","pattern","username","email","votingSubject","teamName","receiveUser","createAction","clearUserState","getCurrentUser","createThunk","path","userApi","current","successActionCreator","failureActionCreator","useDispatchAndSelector","Login","location","useForm","register","handleSubmit","user","data","usernameOrEmailRef","passwordRef","usernameOrEmailError","passwordError","to","get","form","onSubmit","loginData","includes","login","additionalReqOptions","method","body","JSON","stringify","TextField","margin","item","inputRef","name","label","helperText","error","Boolean","Button","btn","Register","reValidateMode","usernameRef","emailRef","usernameError","emailError","registerAction","Auth","startIcon","window","href","googleLogin","PrivateRoute","component","rest","isLoggedIn","Component","render","fallback","pathname","from","MuiHeader","onThemeChange","darkModeIsEnabled","history","useHistory","React","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","handleMenuClose","menuId","renderMenu","Menu","paper","menu","anchorOrigin","vertical","horizontal","keepMounted","getContentAnchorEl","transformOrigin","open","onClose","MenuItem","logout","header","Typography","push","logo","noWrap","img","src","favicon","title","grow","sectionDesktop","inCase","loggedIn","lightIcon","size","darkIcon","Avatar","avatar","aria-label","aria-controls","aria-haspopup","event","pictureUrl","alt","sectionMobile","IconButton","GlobalAlert","global","message","content","Alert","severity","hideMessage","lightModeColors","darkModeColors","rootHtmlElement","document","querySelector","getMuiTheme","s","getComputedStyle","createMuiTheme","typography","button","textTransform","fontFamily","getPropertyValue","fontSize","allVariants","trim","palette","primary","main","secondary","toggleDarkMode","enabled","entries","forEach","k","v","style","setProperty","Footer","sentence","icons","target","icon","TeamList","lazy","JoinTeam","TeamDetails","VotingSession","NotFound","Root","initialDarkModeState","localStorage","getItem","setDarkModeActivation","setMuiTheme","muiTheme","ThemeProvider","theme","setItem","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialUserState","createReducer","builder","addCase","payload","addDefaultCase","initialTeamsState","teams","receiveTeam","team","currentUserIsJoined","assign","receiveTeams","loadingSelectedTeams","selectedTeamsType","receivePublicNonJoinedTeams","removeTeamFromTable","handleRemovedMember","teamId","userId","wasAdmin","admins","members","targetArray","targetUserIndex","findIndex","a","splice","handleJoiningPublicTeam","startLoading","changeSelectedTeamsType","showMessage","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","StrictMode","getElementById","successActionPayload","onSuccess","onFailure","fetch","stdRequestOptions","response","getResponseBody","resBody","ok","showAlert","defaultMsg","reqOptions","headers","credentials","handleJoiningTeam","getMyTeams","getPublicNonJoinedTeams","teamApi","getPublic","removeMember","leaveTeam","leave","createTeam","create","joinTeam","token","getJoinTeamUrl","joinPublicTeam","deleteTeam","getUrl","teamApiUrl","apiUrl","getInvitationLinkUrl","toggleRole","userApiUrl","sendVerificationEmail","verifyEmail","changePassword","sendResetPasswordLink","resetPassword","Loading","spinner","returnIfLink","str","some","undefined","getCssClasses","stylesModule","classNames","n","isPromise","value","arrayToObj","arr","key","el","relocateElementToStart","index","unshift","setTimeout","displayDuration","ShowFirstChild","children","modifiedChildren","Array","isArray","callApi","Promise","reject","resolve","status","contentType","json","text"],"mappings":"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","file":"static/js/main.4d7f84c4.chunk.js","sourcesContent":["import { ActionCreatorWithPayload } from '@reduxjs/toolkit';\nimport { RootState } from '../models/state-types';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport interface UseReduxActionParams<T> {\n  action: Function\n  selector: (rootState: RootState) => T\n  effectDeps?: Array<any>\n  actionParams?: any[]\n  useCache?: boolean\n  cachedValueSelector?: (state: T) => any\n  precedingAction?: ActionCreatorWithPayload<any, string>\n  precedingActionParams?: any\n}\n\nexport default function useReduxAction<T>({\n  action,\n  selector, \n  effectDeps = [], \n  actionParams = [], \n  useCache = false,\n  cachedValueSelector = state => state,\n  precedingAction,\n  precedingActionParams\n}: UseReduxActionParams<T>): T {\n\n  const dispatch = useDispatch();\n  const state = useSelector<RootState, T>(selector);\n\n  useEffect(() => {\n    if (useCache && cachedValueSelector(state)) return;\n    if (precedingAction) dispatch(precedingAction(precedingActionParams));\n    dispatch(action(...actionParams));\n  }, effectDeps);\n\n  return state;\n};\n","import { Button, CircularProgress } from '@material-ui/core';\nimport { useMemo, useState } from 'react';\nimport Loading from './loading';\nimport styles from './tab-panel.module.scss';\n\nexport interface TabPanelProps {\n  buttonTitles: string[],\n  tabContents: JSX.Element[],\n  onTabSwitch?: (selectedIndex?: number) => void\n  loading?: boolean\n  initialSelectedIndex?: number\n  stretchTabs?: boolean\n}\n\nconst TabPanel = (props: TabPanelProps) => {\n\n  const {\n    buttonTitles,\n    onTabSwitch,\n    loading,\n    initialSelectedIndex = 0,\n    stretchTabs = true\n  } = props;\n\n  const [visibleTabIndex, setVisibleTabIndex] = useState(initialSelectedIndex);\n\n  const tabContents = useMemo(() => props.tabContents.reduce((agg: { [key: number]: JSX.Element },\n    c: JSX.Element,\n    i: number) => ({ ...agg, [i]: c }), {}), [props.tabContents]);\n\n  const handleTabBtnClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    const selectedIndex = +e.currentTarget.id;\n    setVisibleTabIndex(selectedIndex);\n    if (onTabSwitch) onTabSwitch(selectedIndex)\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles['tab-buttons']}>\n        {buttonTitles.map((t, i) => (\n          <Button\n            classes={{ root: styles[stretchTabs ? 'btn--stretched' : 'btn--squashed' ] }}\n            color='primary'\n            key={i}\n            id={i.toString()}\n            onClick={handleTabBtnClick}\n            variant={visibleTabIndex === i ? 'contained' : 'outlined'}\n          >\n            {t}\n          </Button>\n        ))}\n      </div>\n      <div className={styles['tab-content']}>\n        {loading ? <CircularProgress className={styles.loading} /> : tabContents[visibleTabIndex]}\n      </div>\n    </div>\n  )\n};\n\nexport default TabPanel;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fs-lg\":\"auth_fs-lg__2N9m-\",\"container\":\"auth_container__3IqlF\",\"error\":\"auth_error__1eoZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fs-lg\":\"loading_fs-lg__1lp4R\",\"spinner\":\"loading_spinner__2G47J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fs-lg\":\"global-alert_fs-lg__2UNRh\",\"message\":\"global-alert_message__2FBFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"root_content__1lKYC\"};","import { DeepMap, FieldError } from \"react-hook-form\";\n\nexport interface ValidationRules {\n  required?: boolean\n  maxLength?: number\n  minLength?: number\n  pattern?: RegExp\n}\n\nconst validationRules = {\n  usernameOrEmail: {\n    required: true,\n    maxLength: 200,\n    minLength: 3\n  },\n  password: {\n    required: true,\n    maxLength: 15,\n    minLength: 8,\n    pattern: /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,15}$/\n  },\n  username: {\n    required: true,\n    maxLength: 30,\n    minLength: 3,\n    pattern: /^[a-zA-Z0-9_-]{3,30}$/\n  },\n  email: {\n    required: true,\n    minLength: 5,\n    maxLength: 200,\n    pattern: /^[a-zA-z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/\n  },\n  votingSubject: {\n    maxLength: 500\n  },\n  teamName: {\n    required: true,\n    minLength: 3,\n    maxLength: 1000,\n    pattern: /^[a-zA-Z0-9_-\\s]+$/\n  }\n};\n\nexport const invalidPasswordMsg = 'Password must contain uppercase and lowercase letters, numbers and symbols';\n\nexport const getValidationMessage = (errors: DeepMap<Record<string, any>, FieldError>, fieldName: string, fieldValidationRules: any, patternMessage?: string): string => {\n  if (!errors || Object.keys(errors).length === 0 || !errors[fieldName]) return '';\n  switch (errors[fieldName].type) {\n    case 'required':\n      return 'Field is required';\n    case 'minLength':\n      return `Field length cannot be less than ${fieldValidationRules.minLength}`\n    case 'maxLength':\n      return `Field length cannot be greater than ${fieldValidationRules.maxLength}`\n    case 'pattern':\n      return patternMessage || 'Field is invalid';\n    default:\n      return 'Field is invalid';\n  }\n}\n\nexport default validationRules;","import { createAction } from '@reduxjs/toolkit';\nimport { LoginData, RegisterData, User } from '../../models/user';\nimport userApi from '../../api/user';\nimport { createThunk } from '../helpers/api';\n\nexport const receiveUser = createAction<User>('receiveUser');\nexport const clearUserState = createAction('clearUserState');\n\nexport const login = (data: LoginData) => createThunk({\n  path: userApi.login,\n  successActionCreator: receiveUser,\n  additionalReqOptions: {\n    method: 'post',\n    body: JSON.stringify(data),\n  }\n});\n\nexport const register = (data: RegisterData) => createThunk({\n  path: userApi.register,\n  successActionCreator: receiveUser,\n  additionalReqOptions: {\n    method: 'post',\n    body: JSON.stringify(data)\n  }\n});\n\nexport const logout = () => createThunk({\n  path: userApi.logout,\n  successActionCreator: clearUserState,\n  additionalReqOptions: {\n    method: 'POST',\n  }\n});\n\nexport const getCurrentUser = () => createThunk({\n  path: userApi.current,\n  successActionCreator: receiveUser,\n  failureActionCreator: clearUserState\n});","import { Dispatch } from '@reduxjs/toolkit';\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { RootState } from \"../models/state-types\";\n\nexport default function useDispatchAndSelector<T>(selector: (state: RootState) => T): [Dispatch<any>, T] {\n\n  const dispatch = useDispatch();\n  const state = useSelector<RootState, T>(selector);\n\n  return [dispatch, state];\n};\n","import TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { useForm } from 'react-hook-form';\nimport { login } from \"../../redux/actions/user\";\nimport { LoginData, User } from '../../models/user';\nimport styles from './auth-form.module.scss';\nimport validationRules, { getValidationMessage, invalidPasswordMsg } from '../../models/validation';\nimport { Redirect, RouteComponentProps } from 'react-router-dom';\nimport get from 'lodash/get';\nimport useDispatchAndSelector from '../../hooks/use-dispatch-and-selector';\n\nconst Login = ({ location }: RouteComponentProps) => {\n\n  const { register, handleSubmit, errors } = useForm();\n\n  const [dispatch, user] = useDispatchAndSelector(state => state.user.data)\n\n  const usernameOrEmailRef = register(validationRules.usernameOrEmail);\n  const passwordRef = register(validationRules.password);\n\n  const usernameOrEmailError = getValidationMessage(errors, 'usernameOrEmail', validationRules.usernameOrEmail);\n  const passwordError = getValidationMessage(errors, 'password', validationRules.password, invalidPasswordMsg);\n\n  const onSubmit = (data: { usernameOrEmail: string, password: string }) => {\n\n    const loginData: LoginData = { password: data.password };\n\n    if (data.usernameOrEmail.includes('@')) loginData.email = data.usernameOrEmail;\n    else loginData.username = data.usernameOrEmail;\n\n    dispatch(login(loginData));\n  };\n\n  if (user) return <Redirect to={get(location, 'state.from.pathName', '/')} />\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit(onSubmit)}>\n      <TextField\n        margin=\"normal\"\n        className={styles.item}\n        inputRef={usernameOrEmailRef}\n        id=\"usernameOrEmail\"\n        name=\"usernameOrEmail\"\n        label=\"Username or Email\"\n        type=\"text\"\n        helperText={usernameOrEmailError}\n        error={Boolean(usernameOrEmailError)}\n        required />\n      <TextField\n        margin=\"normal\" helperText={passwordError} error={Boolean(passwordError)}\n        className={styles.item} inputRef={passwordRef} id=\"password\" name=\"password\" label=\"Password\" type=\"password\" required />\n      <Button classes={{ root: styles.btn }} color=\"primary\" type=\"submit\" variant=\"contained\">Submit</Button>\n    </form>\n  );\n};\n\nexport default Login;","import TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { useForm } from 'react-hook-form';\nimport { register as registerAction } from \"../../redux/actions/user\";\nimport { RegisterData } from '../../models/user';\nimport styles from './auth-form.module.scss';\nimport validationRules, { getValidationMessage, invalidPasswordMsg } from '../../models/validation';\nimport { Redirect, RouteComponentProps, RouteProps, RouterProps } from 'react-router-dom';\nimport get from 'lodash/get';\nimport useDispatchAndSelector from '../../hooks/use-dispatch-and-selector';\n\nconst Register = ({ location }: RouteComponentProps) => {\n\n  const { register, handleSubmit, errors } = useForm({ reValidateMode: 'onChange' });\n\n  const [dispatch, user] = useDispatchAndSelector(state => state.user.data)\n\n  const usernameRef = register(validationRules.username);\n  const emailRef = register(validationRules.email);\n  const passwordRef = register(validationRules.password);\n\n  const usernameError = getValidationMessage(errors, 'username', validationRules.username);\n  const emailError = getValidationMessage(errors, 'email', validationRules.email);\n  const passwordError = getValidationMessage(errors, 'password', validationRules.password, invalidPasswordMsg);\n\n  const onSubmit = (data: RegisterData) => {\n    dispatch(registerAction(data));\n  };\n\n  if (user) return <Redirect to={get(location, 'state.from.pathName', '/')} />\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit(onSubmit)}>\n      <TextField helperText={usernameError} error={Boolean(usernameError)}\n        margin=\"normal\" className={styles.item} inputRef={usernameRef} id=\"username\" name=\"username\" label=\"Username\" type=\"text\" required />\n      <TextField helperText={emailError} error={Boolean(emailError)}\n        margin=\"normal\" className={styles.item} inputRef={emailRef} id=\"email\" name=\"email\" label=\"Email\" type=\"email\" required />\n      <TextField helperText={passwordError} error={Boolean(passwordError)}\n        margin=\"normal\" className={styles.item} inputRef={passwordRef} id=\"password\" name=\"password\" label=\"Password\" type=\"password\" required />\n      <Button classes={{ root: styles.btn }} color=\"primary\" type=\"submit\" variant=\"contained\">Submit</Button>\n    </form>\n  );\n};\n\nexport default Register;","import Login from './login';\nimport styles from './auth.module.scss';\nimport TabPanel from '../utils/tab-panel';\nimport Register from './register';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { FcGoogle } from 'react-icons/fc';\nimport { Button } from '@material-ui/core';\nimport apiUrl from '../../api/urls';\nimport userApi from '../../api/user';\n\nconst Auth = (props: RouteComponentProps) => (\n  <div className={styles.container}>\n    <Button\n      color='primary'\n      variant='contained'\n      startIcon={<FcGoogle />}\n      onClick={() => window.location.href = userApi.googleLogin}\n    >\n      Log in with Google\n    </Button>\n    <h3>OR</h3>\n    <TabPanel buttonTitles={['Log in', 'Register']} tabContents={[\n      <Login {...props} />,\n      <Register {...props} />\n    ]}\n    />\n  </div>\n);\n\nexport default Auth;","import { useSelector } from \"react-redux\"\nimport { Redirect, Route, RouteProps } from \"react-router-dom\";\nimport { User } from \"../../models/user\"\nimport { RootState, UserState } from \"../../models/state-types\"\nimport { Suspense } from \"react\";\nimport Loading from \"../utils/loading\";\n\nconst PrivateRoute = ({ component, ...rest }: any) => {\n\n  const { data: user, isLoggedIn } = useSelector<RootState, UserState>(state => state.user);\n  const Component = component;\n\n  return <Route {...rest} render={(props) => user && isLoggedIn ? (\n    <Suspense fallback={<Loading />}>\n      <Component {...props} />\n    </Suspense>\n  ) : <Redirect to={{\n    pathname: '/login', state: { from: props.location }\n  }} />\n  } />\n};\n\nexport default PrivateRoute;","export default __webpack_public_path__ + \"static/media/favicon.1cc6896d.png\";","import React, { MouseEventHandler, useEffect, useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../../redux/actions/user';\nimport { RootState, UserState } from '../../models/state-types';\nimport { useHistory, withRouter } from 'react-router';\nimport ShowFirstChild from '../utils/show-first-child';\nimport Avatar from '@material-ui/core/Avatar';\nimport favicon from '../../assets/images/favicon.png';\nimport { MdDarkMode, MdWbSunny } from 'react-icons/md'\nimport { toggleDarkMode } from './styles';\nimport classes from './mui-header.module.scss';\n\nconst MuiHeader = ({\n  onThemeChange,\n  darkModeIsEnabled\n}: { onThemeChange: MouseEventHandler, darkModeIsEnabled: boolean }) => {\n\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { data: user, isLoggedIn = false } = useSelector<RootState, UserState>(state => state.user);\n\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const handleLogout = () => {\n    dispatch(logout());\n    handleMenuClose();\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      classes={{ paper: classes.menu }}\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      getContentAnchorEl={null}\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleLogout}>Log out</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n\n  return (\n    <div className={classes.header}>\n      <Typography\n        onClick={() => history.push('/')}\n        className={classes.logo}\n        variant=\"h6\"\n        noWrap\n      >\n        <img className={classes.img} src={favicon} />\n        <strong className={classes.title}>Scrum Poker</strong>\n      </Typography>\n      <div className={classes.grow} />\n      <div className={classes.sectionDesktop}>\n        <ShowFirstChild inCase={isLoggedIn}>\n          <div className={classes.loggedIn}>\n            <div onClick={onThemeChange}>\n              {darkModeIsEnabled\n                ? <MdWbSunny className={classes.lightIcon} size=\"1.5rem\" title=\"Enable Light Mode\" />\n                : <MdDarkMode className={classes.darkIcon} size=\"1.5rem\" title=\"Enable Dark Mode\" />}\n            </div>\n\n            <Avatar\n              className={classes.avatar}\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              src={user?.pictureUrl}\n              alt={`${user?.username || user?.name} (${user?.email})`}\n              title={`${user?.username || user?.name} (${user?.email})`}\n            >\n              <strong>{(user?.username || user?.name || '')[0]}</strong>\n            </Avatar>\n          </div>\n        </ShowFirstChild>\n      </div>\n      <div className={classes.sectionMobile}>\n        <IconButton\n          aria-label=\"show more\"\n          aria-controls={mobileMenuId}\n          aria-haspopup=\"true\"\n          onClick={handleMobileMenuOpen}\n          color=\"inherit\"\n        >\n          <ShowFirstChild inCase={isLoggedIn}>\n            <MoreIcon />\n          </ShowFirstChild>\n        </IconButton>\n      </div>\n      {renderMenu}\n    </div>\n  );\n};\n\nexport default MuiHeader;","import Alert from '@material-ui/lab/Alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GlobalMessage } from '../../models/global-message';\nimport { RootState } from '../../models/state-types';\nimport { hideMessage } from '../../redux/actions/global';\nimport styles from './global-alert.module.scss';\n\nexport const GlobalAlert = () => {\n  const dispatch = useDispatch();\n  const {\n    content,\n    type = 'info'\n  } = useSelector<RootState, GlobalMessage>(state => state.global.message);\n  if (!content) return null;\n  return (\n    <Alert severity={type} className={styles.message} onClose={() => dispatch(hideMessage())}>\n      {content}\n    </Alert>\n  )\n};\n","import { createMuiTheme } from \"@material-ui/core\";\n\nconst lightModeColors = {\n  '--bg-color': 'white',\n  '--font-color': 'black',\n  '--border-color': '#8f8f8f',\n  '--lighter-border-color': '#b6b6b6',\n  '--scrollbar-color': 'gray',\n  '--scrollbar-bg-color': 'white',\n  '--blue-font-color': 'var(--blue)'\n};\n\nconst darkModeColors = {\n  '--bg-color': 'rgb(26, 26, 26)',\n  '--font-color': 'white',\n  '--border-color': '#424242',\n  '--lighter-border-color': '#2c2c2c',\n  '--scrollbar-color': '#2d2d2d',\n  '--scrollbar-bg-color': 'rgb(26, 26, 26)',\n  '--blue-font-color': 'var(--light-blue)'\n};\n\nexport const rootHtmlElement = document.querySelector(':root') as HTMLElement;\n\nexport const getMuiTheme = (darkModeIsEnabled: boolean) => {\n  const s = getComputedStyle(rootHtmlElement);\n  return createMuiTheme({\n  typography: {\n    button: {\n      textTransform: 'none'\n    },\n    fontFamily: s.getPropertyValue('--main-font-family'),\n    fontSize: 16,\n    allVariants: {\n      color: s.getPropertyValue('--font-color').trim()\n    },\n  },\n  palette: {\n    type: darkModeIsEnabled ? 'dark' : 'light',\n    primary: {\n      main: s.getPropertyValue('--blue').trim()\n    },\n    secondary: {\n      main: s.getPropertyValue('--red').trim()\n    }\n  },\n})\n};\n\nexport const toggleDarkMode = (enabled: boolean) => {\n  Object.entries(enabled ? darkModeColors : lightModeColors).forEach(([k, v]) => {\n    rootHtmlElement.style.setProperty(k, v);\n  });\n};\n","import React from 'react';\nimport { FaLinkedin, FaGithub } from 'react-icons/fa';\nimport styles from './footer.module.scss';\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p className={styles.sentence}>Developed and maintained by Ibrahim Farhan</p>\n      <div className={styles.icons}>\n        <a target=\"blank\" className={styles.icon} href=\"https://linkedin.com/in/ibrahimafarhan\">\n          <FaLinkedin\n            color=\"#0072B1\"\n            size=\"2rem\"\n          />\n        </a>\n        <a className={styles.icon} target=\"blank\" href=\"https://github.com/ibrahimfarhan\">\n          <FaGithub size=\"2rem\" color=\"black\" />\n        </a>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer;\n","import React, { useEffect, useState } from 'react';\nimport { createMuiTheme, Theme, ThemeProvider } from '@material-ui/core';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport useReduxAction from '../../hooks/use-redux-action';\nimport { getCurrentUser } from '../../redux/actions/user';\nimport Auth from '../auth/auth';\nimport PrivateRoute from '../auth/private-route';\nimport MuiHeader from '../layout/mui-header';\nimport Loading from '../utils/loading';\nimport { GlobalAlert } from '../utils/global-alert';\nimport { getMuiTheme, toggleDarkMode } from '../layout/styles';\nimport Footer from '../layout/footer';\nimport styles from './root.module.scss';\n\nconst TeamList = React.lazy(() => import('../main-page/team-list'));\nconst JoinTeam = React.lazy(() => import('../team-page/join-team'));\nconst TeamDetails = React.lazy(() => import('../team-page/team-details'));\nconst VotingSession = React.lazy(() => import('../voting-page/voting-session'));\nconst NotFound = React.lazy(() => import('../utils/not-found'));\n\nconst Root = () => {\n\n  const initialDarkModeState = localStorage.getItem('darkModeIsEnabled') === 'true';\n  const [\n    darkModeIsEnabled,\n    setDarkModeActivation\n  ] = useState<boolean>(initialDarkModeState);\n\n  useEffect(() => {\n    toggleDarkMode(initialDarkModeState);\n    setMuiTheme(getMuiTheme(initialDarkModeState))\n  }, []);\n\n  const [muiTheme, setMuiTheme] = useState<Theme | null>(null);\n  const handleThemeChange = () => {\n    toggleDarkMode(!darkModeIsEnabled);\n    localStorage.setItem('darkModeIsEnabled', (!darkModeIsEnabled).toString());\n    setMuiTheme(getMuiTheme(!darkModeIsEnabled))\n    setDarkModeActivation(!darkModeIsEnabled);\n  };\n\n  const { loading } = useReduxAction({ action: getCurrentUser, selector: state => state.user });\n  if (loading || !muiTheme) return <Loading />\n  return (\n    <ThemeProvider theme={muiTheme}>\n      <Router>\n        <MuiHeader onThemeChange={handleThemeChange} darkModeIsEnabled={darkModeIsEnabled} />\n        <div className={styles.content}>\n          <Switch>\n            <PrivateRoute exact path=\"/\" component={TeamList} />\n            <Route path=\"/login\" component={Auth}></Route>\n            <PrivateRoute exact path=\"/team/:teamId\" component={TeamDetails}></PrivateRoute>\n            <PrivateRoute exact path=\"/team/join/:token\" component={JoinTeam}></PrivateRoute>\n            <PrivateRoute exact path=\"/voting/:teamId\" component={VotingSession}></PrivateRoute>\n            <Route component={NotFound}></Route>\n          </Switch>\n        </div>\n      </Router>\n      <GlobalAlert />\n      <Footer />\n    </ThemeProvider>\n  );\n};\n\nexport default Root;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { receiveUser, clearUserState } from './../actions/user';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { UserState } from '../../models/state-types';\n\nconst initialUserState: UserState = {\n  loading: true,\n  isLoggedIn: false\n};\n\nconst user = createReducer(initialUserState, (builder) => {\n\n  builder.addCase(receiveUser, (state, action) => { \n    state.data = action.payload;\n    if (!state.data.username) state.data.username = state.data.name || '';\n    state.loading = false;\n    state.isLoggedIn = true;\n  });\n\n  builder.addCase(clearUserState, (state) => { \n    state.loading = false;\n    delete state.error;\n    delete state.data;\n    state.isLoggedIn = false;\n  });\n\n  builder.addDefaultCase((state) => { state = initialUserState });\n});\n\nexport default user;","import { handleRemovedMember, startLoading, receivePublicNonJoinedTeams, handleJoiningPublicTeam, changeSelectedTeamsType, receiveTeam } from './../actions/team';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { TeamsState } from '../../models/state-types';\nimport { receiveTeams, removeTeamFromTable } from '../actions/team';\n\nconst initialTeamsState: TeamsState = {\n  loading: true,\n};\n\nconst teams = createReducer(initialTeamsState, (builder) => {\n\n  builder.addCase(receiveTeam, (state, action) => {\n    const team = action.payload;\n    team.currentUserIsJoined = true;\n    if (!state.data) state.data = {};\n    state.data[team.id] = Object.assign(state.data[team.id] || {}, team);\n    state.loading = false;\n  });\n\n  builder.addCase(receiveTeams, (state, action) => {\n    state.data = action.payload.reduce((agg, t) => Object.assign(agg, {\n      [t.id]: Object.assign(t, {\n        currentUserIsJoined: true\n      })\n    }), {});\n    state.loading = false;\n    state.loadingSelectedTeams = false;\n    state.selectedTeamsType = 'joined';\n  });\n\n  builder.addCase(receivePublicNonJoinedTeams, (state, action) => {\n    state.data = action.payload.reduce((agg, t) => Object.assign(agg, {\n      [t.id]: Object.assign(t, {\n        currentUserIsJoined: false\n      })\n    }), {});\n    state.loading = false;\n    state.loadingSelectedTeams = false;\n    state.selectedTeamsType = 'nonJoined';\n  });\n\n  builder.addCase(removeTeamFromTable, (state, action) => {\n    if (state.data) delete state.data[action.payload];\n  });\n\n  builder.addCase(handleRemovedMember, (state, action) => {\n    const { teamId, userId, wasAdmin } = action.payload;\n    if (!state.data) return;\n    const { admins = [], members = [] } = state.data[teamId];\n    const targetArray = wasAdmin ? admins : members;\n    const targetUserIndex = targetArray.findIndex(a => a.id === userId);\n    targetArray.splice(targetUserIndex, 1);\n  });\n\n  builder.addCase(handleJoiningPublicTeam, (state, action) => {\n    if(state.data) {\n      const team = state.data[action.payload];\n      team.currentUserIsJoined = true;\n    }\n    state.loading = false;\n  });\n\n  builder.addCase(startLoading, (state, action) => {\n    state.loading = true;\n  });\n\n  builder.addCase(changeSelectedTeamsType, (state, action) => {\n    state.loadingSelectedTeams = true;\n    state.selectedTeamsType = state.selectedTeamsType === 'joined' ? 'nonJoined' : 'joined';\n  });\n\n  builder.addDefaultCase((state) => { state = initialTeamsState });\n});\n\nexport default teams;","import { hideMessage, showMessage } from './../actions/global';\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { GlobalMessage } from \"../../models/global-message\";\n\nconst global = createReducer<{ message: GlobalMessage }>({ message: {} }, builder => {\n  builder.addCase(showMessage, (state, action) => {\n    state.message = action.payload\n  });\n\n  builder.addCase(hideMessage, state => {\n    state.message = {};\n  });\n});\n\nexport default global;","import { combineReducers } from \"@reduxjs/toolkit\";\nimport user from \"./user\";\nimport teams from './team';\nimport global from './global';\n\nconst rootReducer = combineReducers({\n  user,\n  teams,\n  global\n})\n\nexport default rootReducer;","import { configureStore } from \"@reduxjs/toolkit\";\nimport rootReducer from \"../reducers/root\";\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './components/root/root';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store/store';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Root />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","import { showAlert } from './../../utils/utils';\nimport { showMessage } from './../actions/global';\nimport { ActionCreatorWithPayload, Dispatch } from '@reduxjs/toolkit';\nimport { getResponseBody } from '../../api/call-api';\n\nexport interface CreateThunkParams<T> {\n  path: string\n  successActionCreator?: ActionCreatorWithPayload<T, string>\n  failureActionCreator?: ActionCreatorWithPayload<any, string>\n  additionalReqOptions?: RequestInit\n  successActionPayload?: any,\n  onSuccess?: (dispatch: Dispatch, data: any) => void\n  onFailure?: (dispatch: Dispatch, data: any) => void\n}\nexport const createThunk = <T>({\n  path,\n  successActionCreator,\n  failureActionCreator,\n  additionalReqOptions,\n  successActionPayload,\n  onSuccess,\n  onFailure\n}: CreateThunkParams<T>) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      const response = await fetch(path, stdRequestOptions(additionalReqOptions || {}));\n      const resBody = await getResponseBody(response);\n\n      if (!response.ok) {\n        if (onFailure) onFailure(dispatch, resBody.message);\n        else if (failureActionCreator) dispatch(failureActionCreator(resBody.message))\n        else showAlert(dispatch, { content: resBody.message, type: 'error' });\n        return;\n      }\n\n      if (onSuccess) onSuccess(dispatch, resBody);\n      else if (successActionCreator) dispatch(successActionCreator(successActionPayload || resBody));\n    }\n\n    catch (e) {\n      const defaultMsg = 'Connection Error';\n      if (onFailure) onFailure(dispatch, defaultMsg);\n      else if (failureActionCreator) dispatch(failureActionCreator(defaultMsg))\n      else showAlert(dispatch, { content: defaultMsg, type: 'error' });\n    }\n  }\n};\n\nexport const stdRequestOptions = (reqOptions: RequestInit): RequestInit => Object.assign({\n  headers: { 'content-type': 'application/json' },\n  credentials: 'include',\n}, reqOptions);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"mui-header_header__1H-Pg\",\"logo\":\"mui-header_logo__3fx7D\",\"menuButton\":\"mui-header_menuButton__3-t_j\",\"sectionDesktop\":\"mui-header_sectionDesktop__3GX2h\",\"title\":\"mui-header_title__xR8yN\",\"sectionMobile\":\"mui-header_sectionMobile__1nO2Q\",\"avatar\":\"mui-header_avatar__2Kj4W\",\"loggedIn\":\"mui-header_loggedIn__3F9hD\",\"darkIcon\":\"mui-header_darkIcon__3Q7fA\",\"lightIcon\":\"mui-header_lightIcon__3NRmV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fs-lg\":\"auth-form_fs-lg__2L0ms\",\"form\":\"auth-form_form__22C4F\",\"item\":\"auth-form_item__q-1vt\",\"btn\":\"auth-form_btn__3qbqp\"};","import { createAction } from \"@reduxjs/toolkit\";\nimport teamApi from \"../../api/team\";\nimport userApi from \"../../api/user\";\nimport Team from \"../../models/team\";\nimport { createThunk } from \"../helpers/api\";\n\nexport const receiveTeam = createAction<Team>('receiveTeam');\nexport const receiveTeams = createAction<Team[]>('receiveTeams');\nexport const receivePublicNonJoinedTeams = createAction<Team[]>('receivePublicNonJoinedTeams');\nexport const removeTeamFromTable = createAction<string>('removeTeamFromTable');\nexport const handleRemovedMember = createAction<{ userId: string, teamId: string, wasAdmin: boolean }>('handleRemovedMember');\nexport const handleJoiningTeam = createAction<Team>('handleJoiningTeam');\nexport const handleJoiningPublicTeam = createAction<string>('handleJoiningPublicTeam');\nexport const startLoading = createAction('startLoading');\nexport const changeSelectedTeamsType = createAction<'joined' | 'nonJoined', string>('changeSelectedTeamsType');\n\nexport const getTeam = (id: string) => createThunk({\n  path: teamApi.getUrl(id),\n  successActionCreator: receiveTeam\n});\n\nexport const getMyTeams = () => createThunk({\n  path: userApi.teams,\n  successActionCreator: receiveTeams\n});\n\nexport const getPublicNonJoinedTeams = () => createThunk({\n  path: teamApi.getPublic,\n  successActionCreator: receivePublicNonJoinedTeams\n});\n\nexport const removeMember = (data: {\n  userId: string,\n  teamId: string,\n  wasAdmin: boolean\n}) => createThunk({\n  path: teamApi.removeMember,\n  successActionCreator: handleRemovedMember,\n  successActionPayload: data,\n  additionalReqOptions: {\n    method: 'PATCH',\n    body: JSON.stringify(data)\n  }\n});\n\nexport const updateTeam = (data: Team) => createThunk({\n  path: teamApi.getUrl(data.id),\n  successActionCreator: receiveTeam,\n  additionalReqOptions: {\n    method: 'PATCH',\n    body: JSON.stringify(data)\n  }\n});\n\nexport const leaveTeam = (teamId: string) => createThunk({\n  path: teamApi.leave,\n  successActionCreator: removeTeamFromTable,\n  successActionPayload: teamId,\n  additionalReqOptions: {\n    method: 'PATCH',\n    body: JSON.stringify({ id: teamId })\n  }\n});\n\nexport const createTeam = (data: { name: string, isPublic: boolean }) => createThunk({\n  path: teamApi.create,\n  successActionCreator: receiveTeam,\n  additionalReqOptions: {\n    method: 'POST',\n    body: JSON.stringify(data)\n  }\n});\n\nexport const joinTeam = (token: string) => createThunk({\n  path: teamApi.getJoinTeamUrl(token),\n  successActionCreator: handleJoiningTeam,\n  additionalReqOptions: {\n    method: 'PATCH',\n  }\n});\n\nexport const joinPublicTeam = (teamId: string) => createThunk({\n  path: teamApi.getJoinTeamUrl(teamId),\n  successActionCreator: handleJoiningPublicTeam,\n  successActionPayload: teamId,\n  additionalReqOptions: {\n    method: 'PATCH'\n  }\n});\n\nexport const deleteTeam = (id: string) => createThunk({\n  path: teamApi.getUrl(id),\n  successActionCreator: removeTeamFromTable,\n  successActionPayload: id,\n  additionalReqOptions: {\n    method: 'DELETE'\n  }\n});","import apiUrl from \"./urls\";\n\nconst teamApiUrl = `${apiUrl || ''}/api/v1/team`;\n\nconst teamApi = {\n  getPublic: `${teamApiUrl}/all-public`,\n  getUrl: (id: string) => `${teamApiUrl}/${id}`,\n  create: `${teamApiUrl}/create`,\n  getInvitationLinkUrl: (id: string) => `${teamApiUrl}/${id}/invite`,\n  getJoinTeamUrl: (token: string) => `${teamApiUrl}/join/${token}`,\n  leave: `${teamApiUrl}/leave`,\n  toggleRole: `${teamApiUrl}/toggle-role`,\n  removeMember: `${teamApiUrl}/remove-member`\n}\n\nexport default teamApi;","import { createAction } from \"@reduxjs/toolkit\";\nimport { GlobalMessage } from \"../../models/global-message\";\n\nexport const showMessage = createAction<GlobalMessage>('showMessage');\nexport const hideMessage = createAction('hideMessage');","import apiUrl from \"./urls\";\n\nconst userApiUrl = `${apiUrl}/api/v1/user`;\n\nconst userApi = {\n  login: `${userApiUrl}/login`,\n  register: `${userApiUrl}/register`,\n  logout: `${userApiUrl}/logout`,\n  googleLogin: `${userApiUrl}/oauth/google/login`,\n  teams: `${userApiUrl}/teams`,\n  current: `${userApiUrl}/`,\n  sendVerificationEmail: `${userApiUrl}/send-verification-email`,\n  verifyEmail: `${userApiUrl}/verify-email`,\n  changePassword: `${userApiUrl}/change-password`,\n  sendResetPasswordLink: `${userApiUrl}/send-reset-password-link`,\n  resetPassword: `${userApiUrl}/reset-password`,\n}\n\nexport default userApi;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fs-lg\":\"tab-panel_fs-lg__2dEiO\",\"container\":\"tab-panel_container__3AgO6\",\"tab-buttons\":\"tab-panel_tab-buttons__1ZFSs\",\"btn--stretched\":\"tab-panel_btn--stretched__3XhAp\",\"btn--squashed\":\"tab-panel_btn--squashed__3YN_4\",\"loading\":\"tab-panel_loading__k3p4y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sentence\":\"footer_sentence__2sbFv\",\"icon\":\"footer_icon__2Cx79\"};","import CircularProgress from '@material-ui/core/CircularProgress';\nimport styles from './loading.module.scss';\n\nconst Loading = () => {\n  return (\n      <div className={styles.spinner}>\n        <CircularProgress />\n      </div>\n  )\n}\n\nexport default Loading\n","const { REACT_APP_API_SERVER_URL = '' } = process.env;\n\nconst apiUrl = REACT_APP_API_SERVER_URL;\n\nexport default apiUrl;","import { hideMessage } from './../redux/actions/global';\nimport { GlobalMessage } from './../models/global-message';\nimport { Dispatch } from '@reduxjs/toolkit';\nimport { showMessage } from '../redux/actions/global';\nexport const returnIfLink = (str: string | undefined | null): string | undefined => {\n  if (!str) return undefined;\n  return ['http://', 'https://'].some(s => str.includes(s)) ? str : undefined;\n};\n\nexport const getCssClasses = (stylesModule: any, ...classNames: string[]): string => {\n  return classNames?.reduce((agg, n) => agg === '' ? stylesModule[n] : `${agg} ${stylesModule[n]}`\n    , '');\n};\n\nexport const isPromise = (value: any): boolean => value && typeof value.then === 'function';\n\nexport const arrayToObj = (arr: any[], key?: string) => arr.reduce((agg, el) => Object.assign(agg, { [key ? el[key] : el]: true }), {});\n\nexport const relocateElementToStart = (arr: any[], index: number) => {\n  if (index < 0 || index >= arr.length) return arr;\n  const el = arr.splice(index, 1)[0];\n  arr.unshift(el);\n  return arr;\n};\n\nexport const showAlert = (dispatch: Dispatch, message: GlobalMessage) => {\n  dispatch(showMessage(message));\n  setTimeout(() => dispatch(hideMessage()), message.displayDuration || 5000);\n};","import { Fragment } from \"react\";\n\ntype ShowProps = {\n  children: JSX.Element | Array<JSX.Element | null>,\n  inCase: boolean,\n}\n\n/** Otherwise show second child. */\nconst ShowFirstChild = ({ children, inCase }: ShowProps) => {\n\n  const modifiedChildren: Array<JSX.Element | null> | JSX.Element = Array.isArray(children) ? children : [children, null];\n\n  return (\n    <Fragment>\n      {inCase ? modifiedChildren[0] : modifiedChildren[1]}\n    </Fragment>\n  );\n};\n\nexport default ShowFirstChild;","const callApi = async (path: string, reqOptions?: RequestInit) => {\n  try {\n    const response = await fetch(path, stdRequestOptions(reqOptions || {}));\n    const resBody = await getResponseBody(response);\n\n    if (!response.ok) {\n      return Promise.reject(resBody);\n    }\n\n    return Promise.resolve(resBody);\n  }\n\n  catch (e) {\n    return Promise.reject(e);\n  }\n};\n\nconst stdRequestOptions = (reqOptions: RequestInit): RequestInit => Object.assign(\n  {\n    headers: { 'content-type': 'application/json' },\n    credentials: 'include'\n  },\n  reqOptions\n);\n\nexport function getResponseBody (response: Response): Promise<any> {\n  if (response.status === 204) return Promise.resolve();\n  const contentType = response.headers.get('content-type');\n  if (contentType === 'application/json') return response.json();\n  if (contentType === 'plain/text') return response.text();\n  return Promise.reject('Error while reading server response');\n}\n\nexport default callApi;"],"sourceRoot":""}